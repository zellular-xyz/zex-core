[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "^3.10"
secp256k1 = "^0.14.0"
fastapi = "^0.111.0"
pydantic = ">2.0"
requests = "^2.32.3"
httpx = "^0.27.0"
websocket-client = "^1.8.0"
websockets = "^12.0"
pandas = "^2.2.2"
eth-hash = { extras = ["pycryptodome"], version = "^0.7.0" }
loguru = "^0.7.2"
bitcoinrpc = "^0.7.0"
bitcoin-utils = "0.6.8"
pycryptodomex = "^3.20"
tenacity = "^8.3.0"
fastecdsa = "^2.3.2"
eth-abi = "^5.1.0"

[tool.poetry.dependencies.eigensdk]
git = "https://github.com/zellular-xyz/eigensdk-python"
branch = "main"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
ruff = "^0.4.9"
line_profiler = "^4.1.3"
colorama = "^0.4.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
